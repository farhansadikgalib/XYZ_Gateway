# Generated by Django 5.1.1 on 2024-09-30 02:02

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(default=False)),
                ('version', models.IntegerField(default=1)),
                ('merchant_order_id', models.CharField(db_index=True, max_length=100)),
                ('pgw_order_id', models.CharField(db_index=True, max_length=100)),
                ('merchant_id', models.CharField(max_length=50)),
                ('merchant_name', models.CharField(max_length=255)),
                ('user_id', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_trx_id', models.CharField(db_index=True, max_length=100)),
                ('request_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('received_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('request_currency', models.CharField(max_length=10)),
                ('base_currency', models.CharField(max_length=10)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('agent_id', models.CharField(blank=True, max_length=50, null=True)),
                ('agent_bank_id', models.CharField(blank=True, max_length=50, null=True)),
                ('sender_bank_no', models.CharField(max_length=50)),
                ('receiver_bank_no', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('awaiting', 'Awaiting'), ('paid', 'Paid'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('payment', 'Payment')], default='payment', help_text='Type of the transaction.', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description or note about the transaction.', null=True)),
                ('is_refundable', models.BooleanField(default=False, help_text='Indicates if the transaction is refundable.')),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount that can be refunded if applicable.', max_digits=20, null=True)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Fee charged for the transaction.', max_digits=10)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=4, help_text='Exchange rate applied if different currencies are involved.', max_digits=10, null=True)),
                ('processed_by', models.CharField(blank=True, help_text='Name or ID of the system or user who processed the transaction.', max_length=100, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='Timestamp when the transaction was cancelled.', null=True)),
                ('refunded_at', models.DateTimeField(blank=True, help_text='Timestamp when the transaction was refunded.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional metadata for the transaction in JSON format (requires PostgreSQL).', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Transaction',
                'verbose_name_plural': 'historical Transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('version', models.IntegerField(default=1)),
                ('merchant_order_id', models.CharField(max_length=100, unique=True)),
                ('pgw_order_id', models.CharField(max_length=100, unique=True)),
                ('merchant_id', models.CharField(max_length=50)),
                ('merchant_name', models.CharField(max_length=255)),
                ('user_id', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_trx_id', models.CharField(max_length=100, unique=True)),
                ('request_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('received_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('request_currency', models.CharField(max_length=10)),
                ('base_currency', models.CharField(max_length=10)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('agent_id', models.CharField(blank=True, max_length=50, null=True)),
                ('agent_bank_id', models.CharField(blank=True, max_length=50, null=True)),
                ('sender_bank_no', models.CharField(max_length=50)),
                ('receiver_bank_no', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('awaiting', 'Awaiting'), ('paid', 'Paid'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('payment', 'Payment')], default='payment', help_text='Type of the transaction.', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description or note about the transaction.', null=True)),
                ('is_refundable', models.BooleanField(default=False, help_text='Indicates if the transaction is refundable.')),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount that can be refunded if applicable.', max_digits=20, null=True)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Fee charged for the transaction.', max_digits=10)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=4, help_text='Exchange rate applied if different currencies are involved.', max_digits=10, null=True)),
                ('processed_by', models.CharField(blank=True, help_text='Name or ID of the system or user who processed the transaction.', max_length=100, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='Timestamp when the transaction was cancelled.', null=True)),
                ('refunded_at', models.DateTimeField(blank=True, help_text='Timestamp when the transaction was refunded.', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional metadata for the transaction in JSON format (requires PostgreSQL).', null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transaction',
                'ordering': ['-created_at'],
            },
        ),
    ]
